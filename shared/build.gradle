import org.jetbrains.kotlin.gradle.tasks.FatFrameworkTask

plugins {
    id 'kotlin-multiplatform'
    id 'kotlinx-serialization'
}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

kotlin {

    targets {

//        iosArm32("ios32")
        iosX64("iosX64") // change "iosX64" to "ios" if wants generic name i.e iosMain

        // configure all ios preset
        configure([iosX64]) {
            binaries.framework {
                baseName = "xrossPlateform"
            }
        }

        fromPreset(presets.jvm, 'android')
    }

    sourceSets {

        ext {
            serialization_version = '0.14.0'
            coroutines_version = '1.3.3'
            ktor_version = '1.3.0'
            retrofit_version = '2.7.1'
            rxjava_version = '2.2.17'
            rxandroid_version = '2.1.1'
        }

        commonMain.dependencies {
            implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            implementation "io.ktor:ktor-client-core:$ktor_version"//'1.2.4'
            implementation "io.ktor:ktor-client-json:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"//'1.3.2'
            implementation "io.ktor:ktor-client-serialization:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"//'0.14.0'
        }

        androidMain.dependencies {
            implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
            implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
            implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
            implementation "io.ktor:ktor-client-okhttp:$ktor_version"
            implementation "com.squareup.okhttp3:logging-interceptor:4.3.1"
            implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
            implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
            implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
            implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"

//            implementation "io.ktor:ktor-client-android:$ktor_version"

            //RxJava dependencies
            implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
            implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"//
        }

        iosX64Main.dependencies {

            implementation "io.ktor:ktor-client-ios:$ktor_version"
            implementation "io.ktor:ktor-client-json-native:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.3.3-native-mt" //1.3.3 stable
            implementation "io.ktor:ktor-client-serialization-native:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"

        }
    }

    // Create a task building a fat framework.
    task debugFatFramework(type: FatFrameworkTask) {
        // The fat framework must have the same base name as the initial frameworks.
        baseName = "xrossPlateform"

        // The default destination directory is '<build directory>/fat-framework'.
        destinationDir = file("$buildDir/fat-framework/debug")

        // Specify the frameworks to be merged.
        from(
                //set all ios target for binaries
//                targets.ios32.binaries.getFramework("DEBUG"),
                targets.iosX64.binaries.getFramework("DEBUG")
        )
    }
}

dependencies {

    //Unit and UI testing dependencies
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:3.1.0"

    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61'

}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}